plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.16.0"


allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    implementation 'com.composum.pages:composum-pages-components:1.2.1'
    implementation 'org.glassfish.tyrus.tests.qa:tyrus-tests-qa-project:1.14'
    implementation 'com.composum.pages:composum-pages-components-bundle:1.2.1'
    implementation 'org.glassfish.tyrus.tests.qa:tyrus-tests-qa-browser-test:1.14'
    implementation 'org.glassfish.tyrus.tests.qa:tyrus-tests-qa-lifecycle-test:1.14'
    implementation 'guru.nidi:guru-nidi-parent-pom:1.1.38'
    implementation 'com.composum.pages:composum-pages:1.2.1'
    implementation "org.aeonbits.owner:owner:1.0.12"
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.7",
            'com.codeborne:selenide:5.21.0',
            "io.qameta.allure:allure-selenide:2.16.0",
            "com.github.javafaker:javafaker:1.0.2",
            'org.junit.jupiter:junit-jupiter-api:5.7.2')
    testRuntimeOnly(
            "org.aspectj:aspectjweaver:1.9.7",
            "org.slf4j:slf4j-simple:1.7.32",
            "org.junit.jupiter:junit-jupiter-engine:5.7.2")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    //systemProperty("environment", System.getProperty("environment", "stage")) //preprod, prod
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_test(type: Test){
    systemProperty("browserSize", System.getProperty("browserSize", "400x400"))
    useJUnitPlatform{
        includeTags("properties")
    }
}

/*task many_tags_test(type: Test){
    useJUnitPlatform{
        includeTags("properties")
        includeTags("smoke")
        excludeTags("prod")
    }
}*/

